/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import clases.Cafetera;
import javax.swing.JOptionPane;

/**
 *
 * @author Lorenzo
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    Cafetera c;

    public Principal() {
        initComponents();
        txtActual.setEditable(true);
        txtMaxima.setEditable(true);
        cmdEditar.setEnabled(true);
        cmdLlenar.setEnabled(false);
        cmdAgregar.setEnabled(false);
        cmdServir.setEnabled(false);
        cmdVaciar.setEnabled(false);
        cmdLimpiar.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        cmdEditar = new javax.swing.JButton();
        cmdServir = new javax.swing.JButton();
        cmdLlenar = new javax.swing.JButton();
        cmdVaciar = new javax.swing.JButton();
        cmdAgregar = new javax.swing.JButton();
        cmdLimpiar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMaxima = new javax.swing.JTextField();
        txtActual = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones"));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmdEditar.setText("Editar Cafetera");
        cmdEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEditarActionPerformed(evt);
            }
        });
        jPanel2.add(cmdEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, 30));

        cmdServir.setText("Servir Taza");
        cmdServir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdServirActionPerformed(evt);
            }
        });
        jPanel2.add(cmdServir, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 110, 30));

        cmdLlenar.setText("Llenar Cafetera");
        cmdLlenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLlenarActionPerformed(evt);
            }
        });
        jPanel2.add(cmdLlenar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, 30));

        cmdVaciar.setText("Vaciar Cafetera");
        cmdVaciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdVaciarActionPerformed(evt);
            }
        });
        jPanel2.add(cmdVaciar, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, -1, 30));

        cmdAgregar.setText("Agregar Café");
        cmdAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAgregarActionPerformed(evt);
            }
        });
        jPanel2.add(cmdAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 110, 30));

        cmdLimpiar.setText("Limpiar");
        cmdLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLimpiarActionPerformed(evt);
            }
        });
        jPanel2.add(cmdLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 110, 30));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 70, 260, 180));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CAFETERA");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, 160, 30));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Capacidad Máxima:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 110, 30));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Cantidad Actual:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 100, 30));
        jPanel1.add(txtMaxima, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, 130, 30));
        jPanel1.add(txtActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 170, 130, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(625, 305));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmdEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEditarActionPerformed
        int cap_maxima, cant_actual;
        if (txtMaxima.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Espacio Vacío, Favor Llénelo", "ERROR", JOptionPane.ERROR_MESSAGE);
            txtMaxima.requestFocusInWindow();
        } else if (txtActual.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Espacio Vacío, Favor Llénelo", "ERROR", JOptionPane.ERROR_MESSAGE);
            txtActual.requestFocusInWindow();
        } else if (Integer.parseInt(txtMaxima.getText()) == 0) {
            JOptionPane.showMessageDialog(this, "La Capacidad Máxima No Puede ser Cero", "ERROR", JOptionPane.ERROR_MESSAGE);
            txtMaxima.requestFocusInWindow();
        } else {
            cap_maxima = Integer.parseInt(txtMaxima.getText());
            cant_actual = Integer.parseInt(txtActual.getText());
            if (cant_actual > cap_maxima) {
                JOptionPane.showMessageDialog(this, "La Cantidad Actual No Puede Superar la Capacidad de la Cafetera", "ERROR", JOptionPane.ERROR_MESSAGE);
                txtMaxima.requestFocusInWindow();
            } else {
                c = new Cafetera(cap_maxima, cant_actual);
                JOptionPane.showMessageDialog(this, "¡Valores Modificados!");
                txtActual.setEditable(false);
                txtMaxima.setEditable(false);
                cmdEditar.setEnabled(false);
                cmdLlenar.setEnabled(true);
                cmdAgregar.setEnabled(true);
                cmdServir.setEnabled(true);
                cmdVaciar.setEnabled(true);
                cmdLimpiar.setEnabled(true);
            }
        }
    }//GEN-LAST:event_cmdEditarActionPerformed

    private void cmdServirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdServirActionPerformed
        int cant_actual, aux, sw = 0;

        if (c.getCantidadActual() == 0) {
            JOptionPane.showMessageDialog(this, "No se puede sacar tazas de café, debido a que no hay café. " + "\n"
                    + " Favor agréguele café a la cafetera", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            do {
                try {
                    aux = Integer.parseInt(JOptionPane.showInputDialog(this, "Ingrese las tazas de café a sacar"));
                    sw = 0;
                    c.servirTaza(aux);
                    if (c.getCantidadActual() < 0) {
                        JOptionPane.showMessageDialog(this, "No se puede repartir las tazas deseadas porque la cantidad de café actual no alcanza");
                        cant_actual = c.getCantidadActual();
                        txtActual.setText("" + cant_actual);
                    } else {
                        JOptionPane.showMessageDialog(this, "Tazas Servidas");
                        cant_actual = c.getCantidadActual();
                        txtActual.setText("" + cant_actual);
                    }
                    sw = 1;
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Ingrese un Número Válido", "ERROR", JOptionPane.ERROR_MESSAGE);
                    sw = 0;
                } catch (NullPointerException e) {
                    int aux2;
                    aux2 = JOptionPane.showConfirmDialog(this, "¿Seguro que Desea Salir?", "SALIR", JOptionPane.YES_NO_OPTION);
                    if (aux2 == 0) {
                        sw = 1;
                    } else {
                        sw = 0;
                    }
                }

            } while (sw == 0);
            txtActual.setEditable(false);
            txtMaxima.setEditable(false);
            cmdEditar.setEnabled(false);
            cmdLlenar.setEnabled(true);
            cmdAgregar.setEnabled(true);
            cmdServir.setEnabled(true);
            cmdVaciar.setEnabled(true);
            cmdLimpiar.setEnabled(true);
        }
    }//GEN-LAST:event_cmdServirActionPerformed

    private void cmdLlenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLlenarActionPerformed
        int cant_actual;
        c.llenarCafetera();
        cant_actual = c.getCantidadActual();
        txtActual.setText("" + cant_actual);
        JOptionPane.showMessageDialog(this, "Cafetera Full");
        txtActual.setEditable(false);
        txtMaxima.setEditable(false);
        cmdEditar.setEnabled(false);
        cmdLlenar.setEnabled(true);
        cmdAgregar.setEnabled(true);
        cmdServir.setEnabled(true);
        cmdVaciar.setEnabled(true);
        cmdLimpiar.setEnabled(true);
    }//GEN-LAST:event_cmdLlenarActionPerformed

    private void cmdVaciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdVaciarActionPerformed
        int cant_actual;
        c.vaciarCafetera();
        cant_actual = c.getCantidadActual();
        txtActual.setText("" + cant_actual);
        JOptionPane.showMessageDialog(this, "Cafetera Vacía");
        txtActual.setEditable(false);
        txtMaxima.setEditable(false);
        cmdEditar.setEnabled(false);
        cmdLlenar.setEnabled(true);
        cmdAgregar.setEnabled(true);
        cmdServir.setEnabled(true);
        cmdVaciar.setEnabled(true);
        cmdLimpiar.setEnabled(true);
    }//GEN-LAST:event_cmdVaciarActionPerformed

    private void cmdAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAgregarActionPerformed
        int cant_cafe, cant_actual, sw = 0;
        do {
            try {
                cant_cafe = Integer.parseInt(JOptionPane.showInputDialog(this, "Ingrese la Cantidad de Café"));
                if (cant_cafe <= 0) {
                    JOptionPane.showMessageDialog(this, "No puede agregar una cantidad menor o igual a cero", "ERROR", JOptionPane.ERROR_MESSAGE);
                    sw = 0;
                } else {
                    c.agregarCafe(cant_cafe);
                    JOptionPane.showMessageDialog(this, "Café Agregado");
                    cant_actual = c.getCantidadActual();
                    txtActual.setText("" + cant_actual);
                    sw = 1;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "digite un numero valido", "ERROR", JOptionPane.ERROR_MESSAGE);
                sw = 0;
            } catch (NullPointerException e) {
                int res = JOptionPane.showConfirmDialog(this, "¿Seguro que Desea Salir?", "SALIR", JOptionPane.YES_NO_OPTION);
                if (res == 0) {
                    sw = 1;
                } else {
                    sw = 0;
                }
            }
        } while (sw == 0);
        txtActual.setEditable(false);
        txtMaxima.setEditable(false);
        cmdEditar.setEnabled(false);
        cmdLlenar.setEnabled(true);
        cmdAgregar.setEnabled(true);
        cmdServir.setEnabled(true);
        cmdVaciar.setEnabled(true);
        cmdLimpiar.setEnabled(true);
    }//GEN-LAST:event_cmdAgregarActionPerformed

    private void cmdLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLimpiarActionPerformed
        txtActual.setText("0");
        txtMaxima.setText("1000");
        txtMaxima.requestFocusInWindow();
        txtActual.setEditable(true);
        txtMaxima.setEditable(true);
        cmdEditar.setEnabled(true);
        cmdLlenar.setEnabled(true);
        cmdAgregar.setEnabled(true);
        cmdServir.setEnabled(true);
        cmdVaciar.setEnabled(true);
        cmdLimpiar.setEnabled(false);
    }//GEN-LAST:event_cmdLimpiarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdAgregar;
    private javax.swing.JButton cmdEditar;
    private javax.swing.JButton cmdLimpiar;
    private javax.swing.JButton cmdLlenar;
    private javax.swing.JButton cmdServir;
    private javax.swing.JButton cmdVaciar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtActual;
    private javax.swing.JTextField txtMaxima;
    // End of variables declaration//GEN-END:variables
}
